// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class LinkCreated extends ethereum.Event {
  get params(): LinkCreated__Params {
    return new LinkCreated__Params(this);
  }
}

export class LinkCreated__Params {
  _event: LinkCreated;

  constructor(event: LinkCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hashedPassword(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get tokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LinkRedeemed extends ethereum.Event {
  get params(): LinkRedeemed__Params {
    return new LinkRedeemed__Params(this);
  }
}

export class LinkRedeemed__Params {
  _event: LinkRedeemed;

  constructor(event: LinkRedeemed) {
    this._event = event;
  }

  get redeemer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hashedPassword(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get password(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get tokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LinkToLambo extends ethereum.SmartContract {
  static bind(address: Address): LinkToLambo {
    return new LinkToLambo("LinkToLambo", address);
  }

  tokenAddresses(param0: Bytes): Address {
    let result = super.call(
      "tokenAddresses",
      "tokenAddresses(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return result[0].toAddress();
  }

  try_tokenAddresses(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenAddresses",
      "tokenAddresses(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenAmounts(param0: Bytes): BigInt {
    let result = super.call("tokenAmounts", "tokenAmounts(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0),
    ]);

    return result[0].toBigInt();
  }

  try_tokenAmounts(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenAmounts",
      "tokenAmounts(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateLinkCall extends ethereum.Call {
  get inputs(): CreateLinkCall__Inputs {
    return new CreateLinkCall__Inputs(this);
  }

  get outputs(): CreateLinkCall__Outputs {
    return new CreateLinkCall__Outputs(this);
  }
}

export class CreateLinkCall__Inputs {
  _call: CreateLinkCall;

  constructor(call: CreateLinkCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get hashedPassword(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CreateLinkCall__Outputs {
  _call: CreateLinkCall;

  constructor(call: CreateLinkCall) {
    this._call = call;
  }
}

export class RedeemLinkCall extends ethereum.Call {
  get inputs(): RedeemLinkCall__Inputs {
    return new RedeemLinkCall__Inputs(this);
  }

  get outputs(): RedeemLinkCall__Outputs {
    return new RedeemLinkCall__Outputs(this);
  }
}

export class RedeemLinkCall__Inputs {
  _call: RedeemLinkCall;

  constructor(call: RedeemLinkCall) {
    this._call = call;
  }

  get password(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RedeemLinkCall__Outputs {
  _call: RedeemLinkCall;

  constructor(call: RedeemLinkCall) {
    this._call = call;
  }
}
